apiVersion: v1
kind: Namespace
metadata:
  name: music-planning
  labels:
    name: music-planning
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: planning-db
  namespace: music-planning
  annotations:
    volume.beta.kubernetes.io/storage-class: "fast"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: music-planning
spec:
  selector:
    matchLabels:
      app: music-planning
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: music-planning
    spec:
      containers:
        - name: backend
          image: <PRIVATE_REGISTRY_URL>/generic-nodeserver:latest
          env:
            - name: REPOSITORY
              value: https://github.com/dkvz/music-planning-backend.git
            - name: COMMIT
              value: 9d39a4599e7c9e66e68993282d788baf4a5bb544
            - name: PLANNING_DB_PATH
              value: '/usr/src/database'
          ports:
            - name: http
              containerPort: 8081
          volumeMounts:
            - name: database
              mountPath: /usr/src/database
      imagePullSecrets:
        - name: regcred
      volumes:
      - name: database
        persistentVolumeClaim:
          claimName: planning-db
---
kind: Service
apiVersion: v1
metadata:
  name: backend
  namespace: music-planning
spec:
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081